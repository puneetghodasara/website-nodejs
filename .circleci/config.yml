version: 2.1
orbs:
  docker-publish: circleci/docker-publish@0.1.6
  gcp-cli: circleci/gcp-cli@1.3.0
  aws-ecr: circleci/aws-ecr@3.1.0
  aws-cli: circleci/aws-cli@0.1.13
  gcp-gcr: circleci/gcp-gcr@0.0.4
  azure-cli: circleci/azure-cli@1.0.3
commands:
  docker-login:
    steps:
      - run:
          name: Login to docker.io
          command: docker login -u "${DOCKER_LOGIN}" -p "${DOCKER_PASSWORD}"
  docker-build:
    steps:
      - run:
          name: Building Docker Image
          command: docker build -t ${DOCKER_LOGIN}/${CONTAINER_NAME}:${CONTAINER_TAG} .
  docker-push:
    parameters:
      registry:
        type: string
        default: docker.io/${DOCKER_LOGIN}
      name:
        type: string
        default: ${CONTAINER_NAME}
      tag:
        type: string
        default: ${CONTAINER_TAG}
    steps:
      - docker-login
      - run:
          name: Pushing Image
          command: docker push <<parameters.registry>>/<<parameters.name>>:<<parameters.tag>>
  docker-pull:
    parameters:
      registry:
        type: string
        default: docker.io/${DOCKER_LOGIN}
      name:
        type: string
        default: ${CONTAINER_NAME}
      tag:
        type: string
        default: ${CONTAINER_TAG}
    steps:
      - docker-login
      - run:
          name: Pulling Image
          command: docker pull <<parameters.registry>>/<<parameters.name>>:<<parameters.tag>>
  docker-tag:
    parameters:
      to_name:
        type: string
      to_tag:
        type: string
        default: ${CONTAINER_TAG}
      to_registry:
        type: string
    steps:
      - run:
          name: Tagging Image
          command: docker tag $DOCKER_LOGIN/$CONTAINER_NAME:$CUSTOM_TAG <<parameters.to_registry>>/<<parameters.to_name>>:<<parameters.to_tag>>
  decrypt-secrets:
    steps:
      - run:
          name: Decrypting *.enc files
          command: for filename in keys/*; do openssl enc -aes-256-ecb  -in $filename -out $filename.enc -pass pass:$ENCRYPTION_PASSPHRASE; done
      - run:
          name: Deleting *.enc files
          command: rm keys/*.enc
  download-stories:
    steps:
      - run:
          name: Download Stories
          command: |
            mkdir story
            gsutil -m cp -r gs://story.puneetghodasara.com/* story/
  add-version-file:
    steps:
      - run:
          name: Adding revision.info
          command: echo $CIRCLE_BUILD_NUM > public/revision.info
  prepare-aws:
    steps:
      - run:
          name: Install Python
          command: |
            sudo apt-get update
            sudo apt-get install -y python3 python3-pip
      - aws-cli/install
      - aws-cli/configure
jobs:
  build:
    docker:
      - image: circleci/buildpack-deps
    steps:
      - checkout
      - setup_remote_docker
      - gcp-cli/install
      - gcp-cli/initialize
      - decrypt-secrets
      - download-stories
      - add-version-file
      - docker-build
      - docker-push
  aws-push:
    docker:
      - image: circleci/buildpack-deps
    steps:
      - setup_remote_docker
      - prepare-aws
      - docker-pull
      - docker-tag:
          to_registry: $AWS_ECR_ACCOUNT_URL
          to_name: $CONTAINER_NAME
      - aws-ecr/ecr-login
      - docker-push:
          registry: $AWS_ECR_ACCOUNT_URL
          name: $CONTAINER_NAME
  gcp-push:
    docker:
      - image: circleci/buildpack-deps
    steps:
      - setup_remote_docker
      - gcp-cli/install
      - gcp-cli/initialize
      - docker-publish/check
      - run:
          name: Pull Image
          command: |
            docker pull $DOCKER_LOGIN/$CONTAINER_NAME:$CUSTOM_TAG
            docker tag $DOCKER_LOGIN/$CONTAINER_NAME:$CUSTOM_TAG gcr.io/$GOOGLE_PROJECT_ID/$CONTAINER_NAME:$CUSTOM_TAG
            docker images
      - run:
          name: Testing GCloud auth
          command: |
            gcloud auth configure-docker --quiet --project $GOOGLE_PROJECT_ID
      - gcp-gcr/push-image:
          image: $CONTAINER_NAME
          tag: $CUSTOM_TAG
  azure-delivery:
    docker:
      - image: circleci/buildpack-deps
    steps:
      - setup_remote_docker
      - azure-cli/install
      - azure-cli/login-with-service-principal
      - run:
          name: Azure Restart
          command: |
            az configure --defaults group=$AZURE_WEBAPP_RESOURCE_NAME
            az webapp restart -n $AZURE_WEBAPP_NAME
  gcp-delivery:
    docker:
      - image: circleci/buildpack-deps
    steps:
      - setup_remote_docker
      - gcp-cli/install
      - gcp-cli/initialize:
          gcloud-service-key: GCLOUD_CIRCLECI_SERVICE_KEY
      - run:
          name: Delivering Container to Google Cloud Platform
          command: |
            gcloud compute instances update-container $GCP_WEBAPP_NAME --zone $GOOGLE_COMPUTE_ZONE
  aws-delivery:
    docker:
      - image: circleci/buildpack-deps
    steps:
      - setup_remote_docker
      - run:
          name: Python Preparation
          command: |
            sudo apt-get update
            sudo apt-get install -y python3 python3-pip
      - aws-cli/install
      - aws-cli/configure
      - run:
          name: Delivering Container to AWS
          command: |
            TASK_ID=`aws ecs list-tasks --desired-status RUNNING --launch-type EC2 | jq -r '.taskArns[0]'`
            echo $TASK_ID would stop
            aws ecs stop-task --task $TASK_ID
            aws ecs run-task --task-definition $AWS_TASK_DEF_NAME --launch-type EC2

workflows:
  build-flow:
    jobs:
      - build
      - aws-push:
          requires:
            - build
#      - gcp-push:
#          requires:
#            - build
#      - azure-delivery:
#          requires:
#            - build
#      - gcp-delivery:
#          requires:
#            - gcp-push
#      - aws-delivery:
#          requires:
#            - aws-push

